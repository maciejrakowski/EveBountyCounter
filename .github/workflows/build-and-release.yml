name: Build and Release

on:
  push:
    branches:
      - 'release/v*'
      - 'master'
  pull_request:
    branches:
      - 'master'
    types: [closed]  # Only trigger when PR is closed (merged)
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    # Only run if it's a push to release/v* OR a merged PR from release/v* to master
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/heads/release/v')) ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/v') && github.base_ref == 'master') ||
      (github.event_name == 'workflow_dispatch')

    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Extract version from branch name
      id: extract_version
      run: |
        BRANCH_NAME=${GITHUB_REF#refs/heads/}
        VERSION=${BRANCH_NAME#releases/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
        echo "Version extracted: $VERSION"

    - name: Restore dependencies
      run: dotnet restore EveBountyCounter/EveBountyCounter.sln
    
    - name: Build Windows x64
      run: dotnet publish EveBountyCounter/EveBountyCounter/EveBountyCounter.csproj -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -p:Version=${{ steps.extract_version.outputs.version }} -o ./publish/win-x64
    
    - name: Build Linux x64
      run: dotnet publish EveBountyCounter/EveBountyCounter/EveBountyCounter.csproj -c Release -r linux-x64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -p:Version=${{ steps.extract_version.outputs.version }} -o ./publish/linux-x64
    
    - name: Build macOS x64
      run: dotnet publish EveBountyCounter/EveBountyCounter/EveBountyCounter.csproj -c Release -r osx-x64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -p:Version=${{ steps.extract_version.outputs.version }} -o ./publish/osx-x64
    
    - name: Create Release Archives
      run: |
        cd publish
        zip -r ../EveBountyCounter-${{ steps.extract_version.outputs.version }}-win-x64.zip win-x64/
        tar -czf ../EveBountyCounter-${{ steps.extract_version.outputs.version }}-linux-x64.tar.gz -C linux-x64 .
        tar -czf ../EveBountyCounter-${{ steps.extract_version.outputs.version }}-osx-x64.tar.gz -C osx-x64 .
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref,  'refs/heads/releases/v')
      with:
        tag_name: v${{ steps.extract_version.outputs.version }}
        name: Release v${{ steps.extract_version.outputs.version }}
        body: |
          Release v${{ steps.extract_version.outputs.version }}
          
          Generated from branch: ${{ steps.extract_version.outputs.branch_name }}
          
          ## Downloads
          - Windows: EveBountyCounter-${{ steps.extract_version.outputs.version }}-win-x64.zip
          - Linux: EveBountyCounter-${{ steps.extract_version.outputs.version }}-linux-x64.tar.gz
          - macOS: EveBountyCounter-${{ steps.extract_version.outputs.version }}-osx-x64.tar.gz
        files: |
          EveBountyCounter-${{ steps.extract_version.outputs.version }}-win-x64.zip
          EveBountyCounter-${{ steps.extract_version.outputs.version }}-linux-x64.tar.gz
          EveBountyCounter-${{ steps.extract_version.outputs.version }}-osx-x64.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
